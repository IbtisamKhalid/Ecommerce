// this is my form component where i am getting the details escept dispute
// add these changes to it also if the subtitle is the category
// my intialize escrow form with the fields. 
// /* eslint-disable react/prop-types */
// import {
//   Box,
//   FormControl,
//   InputLabel,
//   Select,
//   Grid2 as Grid,
//   Typography,
//   TextField,
//   Button,
//   Divider,
//   MenuItem,
// } from "@mui/material";
// import { Controller } from "react-hook-form";
// import { Colors, Fonts } from "../../../../Theme/Theme";
// import useStartEscrow from "./Hooks/useStartEscrow";
// import LoggedInNavbarLayout from "../../LoggedInNavBar/LoggedInNavbarLayout/LoggedInNavbarLayout.jsx";

// export const SelectComponent = ({ name, control, label, options = [] }) => {
//   return (
//     <>
//       <Controller
//         name={name}
//         control={control}
//         render={({ field, fieldState }) => (
//           <FormControl
//             fullWidth
//             error={!!fieldState.error}
//             sx={{ mt: "0.3rem" }}
//           >
//             <InputLabel>{label}</InputLabel>
//             <Select {...field} label={label}>
//               {options.map((option, index) => (
//                 <MenuItem key={index} value={option}>
//                   {option}
//                 </MenuItem>
//               ))}
//             </Select>
//           </FormControl>
//         )}
//         rules={{ required: ${label} is required }}
//       />
//     </>
//   );
// };

// function IntializeEscrow() {
//   const {
//     // watch,
//     errors,
//     control,
//     showBox,
//     register,
//     onSubmit,
//     secondPerson,
//     handleSubmit,
//     selectRoleOption,
//     selecCurrencyOption,
//   } = useStartEscrow();
  
//   // const Price = watch("Price");
//   // // const MyRole = watch("MyRole");
//   // // const Currency = watch("Currency");
//   // // const ItemName = watch("ItemName");
//   // const ItemCategory = watch("ItemCategory");
//   // const ItemDescription = watch("ItemDescription");
//   // const TransactionTitle = watch("TransactionTitle");
//   // const InspectionPeriod = watch("InspectionPeriod");

//   return (
//     <>
//       <Box sx={{ bgcolor: Colors.tertiary, p: "0 0 3rem 0" }}>
//         <LoggedInNavbarLayout />
//         {/*  the Form component starts here  */}
//         <Box
//           sx={{
//             margin: {
//               xs: "3rem 3rem 0",
//               // sm: "2rem 7rem 2rem",
//               md: "3rem 15rem 0",
//             },
//             boxShadow: "0 4px 8px hsla(185, 8%, 67%, .5)",
//             borderRadius: "8px",
//             backgroundColor: "#fff",
//             // p: "5rem 5rem",
//             p: { xs: "1rem 1rem", sm: "3rem 5rem", md: "4rem 10rem" },
//             // "@media (min-width:660px)": {
//             //   margin: " 3rem 3rem 4rem",
//             // },
//             "@media (min-width:760px)": {
//               margin: " 3rem 3rem 0",
//               p: "2rem 1rem",
//             },
//             "@media (min-width:900px)": {
//               margin: " 3rem 5rem 0",
//               p: "2rem 1rem",
//             },
//             "@media (min-width:950px)": {
//               margin: " 3rem 8.5rem 0",
//               p: "3rem 2rem",
//             },
//             "@media (min-width:1000px)": {
//               margin: " 3rem 10rem 0",
//               p: "3rem 3rem",
//             },
//             "@media (min-width:1100px)": {
//               margin: " 3rem 15rem 0",
//               p: "3rem 5rem",
//             },
//           }}
//         >
//           <Typography
//             variant="h5"
//             sx={{
//               color: Colors.fontColor,
//               fontFamily: Fonts.primaryFont,
//               mb: "0.5rem",
//             }}
//           >
//             Start Transaction
//           </Typography>
//           <Divider />
//           <form onSubmit={handleSubmit(onSubmit)}>
//             <TextField
//               variant="outlined"
//               label="Transaction Title"
//               fullWidth
//               autoFocus
//               {...register("TransactionTitle", {
//                 required: "Required",
//               })}
//               error={!!errors.TransactionTitle}
//               helperText={errors.TransactionTitle?.message || " "}
//               sx={{ mt: "1rem" }}
//             />

//             <Grid container spacing={4} sx={{}}>
//               <Grid
//                 item
//                 size={{ xs: 12, sm: 4, md: 4 }}
//                 xs={4}
//                 sx={{
//                   "@media (min-width:660px)": {
//                     size: 12,
//                   },
//                 }}
//               >
//                 <SelectComponent
//                   name="MyRole"
//                   control={control}
//                   label="My Role"
//                   options={selectRoleOption}
//                 />
//               </Grid>
//               <Grid
//                 item
//                 size={{ xs: 12, sm: 4, md: 4 }}
//                 xs={4}
//                 sx={{
//                   "@media (min-width:660px)": {
//                     size: 12,
//                   },
//                 }}
//               >
//                 <SelectComponent
//                   name="Currency"
//                   control={control}
//                   label="Currency"
//                   options={selecCurrencyOption}
//                 />
//               </Grid>
//               <Grid item size={{ xs: 12, sm: 4, md: 4 }} xs={4}>
//                 <TextField
//                   variant="outlined"
//                   label="Inspection Period (Days)"
//                   placeholder={"1"}
//                   {...register("InspectionPeriod", {
//                     required: "Required",
//                     min: {
//                       value: 1,
//                       message: "Inspection Period must be greater than 0",
//                     },
//                     pattern: {
//                       value: /^[0-9]+$/,
//                       message: "Inspection Period must be a valid integer",
//                     },
//                   })}
//                   error={!!errors.InspectionPeriod}
//                   helperText={errors.InspectionPeriod?.message || " "}
//                   sx={{ mt: "0.3rem" }}
//                   fullWidth
//                 />
//               </Grid>
//             </Grid>
//             <Typography
//               sx={{
//                 p: "0.5rem 0 0.5rem",
//                 fontWeight: "600",
//                 fontSize: "15px",
//                 m: "0.5rem 0 0.5rem 0 ",
//                 color: Colors.button,
//               }}
//             >
//               Transaction Details
//             </Typography>
//             {!showBox && (
//               <Box>
//                 <Grid container spacing={{ xs: 1, sm: 2, md: 3 }}>
//                   <Grid item size={{ xs: 12, sm: 6 }} xs={6}>
//                     <TextField
//                       variant="outlined"
//                       label="Item Name"
//                       fullWidth
//                       {...register("ItemName", { required: "Required" })}
//                       error={!!errors.ItemName}
//                       helperText={errors.ItemName?.message || " "}
//                       sx={{ mt: "0.3rem" }}
//                     />
//                   </Grid>
//                   <Grid item size={{ xs: 12, sm: 6 }} xs={6}>
//                     <TextField
//                       variant="outlined"
//                       label="Price in $"
//                       fullWidth
//                       defaultValue="0"
//                       {...register("Price", {
//                         required: "Required",
//                         // valueAsNumber: true, // ensures it's treated as a number
//                         min: {
//                           value: 0,
//                           message: "Price must be greater than 0",
//                         },
//                         pattern: {
//                           value: /^[0-9]+$/, // Regular expression for integer validation
//                           message: "Inspection Period must be an integer", // Error message
//                         },
//                       })}
//                       error={!!errors.Price}
//                       helperText={errors.Price?.message || " "}
//                       sx={{ mt: "0.3rem" }}
//                     />
//                   </Grid>
//                 </Grid>

//                 <TextField
//                   variant="outlined"
//                   label="Item Category"
//                   fullWidth
//                   {...register("ItemCategory", {
//                     required: "Required",
//                   })}
//                   error={!!errors.ItemCategory}
//                   helperText={errors.ItemCategory?.message || " "}
//                   sx={{ mt: "0.3rem" }}
//                 />

//                 <TextField
//                   variant="outlined"
//                   label="Item Description"
//                   fullWidth
//                   {...register("ItemDescription", {
//                     required: "Required",
//                   })}
//                   error={!!errors.ItemDescription}
//                   helperText={errors.ItemDescription?.message || " "}
//                 />
//                 <Button
//                   variant="contained"
//                   type="submit"
//                   sx={{ mt: "0.3rem", float: "right", bgcolor: Colors.button }}
//                 >
//                   Add Item
//                 </Button>
//               </Box>
//             )}
//             {showBox && (
//               <Box>
//                 <Box
//                   sx={{
//                     p: "2rem 2rem",
//                     border: 1px solid ${Colors.borderColor},
//                     boxShadow: "0 1px 1px hsla(185, 8%, 67%, .5)",
//                     borderRadius: "8px",
//                     m: "1rem 0 2rem 0",
//                   }}
//                 >
//                   <Box
//                     sx={{ display: "flex", justifyContent: "space-between" }}
//                   >
//                     <Typography
//                       variant="h6"
//                       sx={{
//                         fontWeight: "600",
//                         fontFamily: Fonts.primaryFont,
//                         fontSize: "14px",
//                       }}
//                     >
//                       {TransactionTitle}
//                     </Typography>
//                     <Typography
//                       variant="body1"
//                       sx={{ color: Colors.fontColor }}
//                     >
//                       ${Price}
//                     </Typography>
//                   </Box>
//                   <Typography
//                     variant="body1"
//                     sx={{
//                       color: Colors.fontColor,
//                       fontFamily: Fonts.primaryFont,
//                       fontStyle: "italic",
//                     }}
//                   >
//                     {ItemCategory}
//                   </Typography>
//                   <Typography
//                     variant="body1"
//                     sx={{
//                       color: Colors.fontColor,
//                       fontFamily: Fonts.primaryFont,
//                     }}
//                   >
//                     {ItemDescription}
//                   </Typography>
//                   <Typography variant="body1" sx={{ m: "1rem 0 0 0 " }}>
//                     Inspection Period is {InspectionPeriod}
//                   </Typography>
//                 </Box>

//                 <Box
//                   sx={{
//                     p: "4rem 0.5rem",
//                     borderTop: 0.5px solid ${Colors.borderColor},
//                   }}
//                 >
//                   <Typography
//                     variant="h6"
//                     sx={{
//                       fontSize: "17px",
//                       fontFamily: Fonts.primaryFont,
//                       fontWeight: 600,
//                       mb: "1rem",
//                       color: Colors.button,
//                     }}
//                   >
//                     Transaction Summary
//                   </Typography>
//                   <Box
//                     sx={{
//                       display: "flex",
//                       justifyContent: "space-between",
//                       p: "0.5rem 0 1.5rem 0",
//                       borderBottom: 1px solid ${Colors.borderColor},
//                     }}
//                   >
//                     <Typography
//                       variant="body1"
//                       sx={{
//                         color: Colors.fontColor,
//                         fontSize: "15px",
//                         fontFamily: Fonts.primaryFont,
//                       }}
//                     >
//                       Subtotal:
//                     </Typography>
//                     <Typography
//                       variant="body1"
//                       sx={{
//                         color: Colors.fontColor,
//                         fontSize: "15px",
//                         fontFamily: Fonts.primaryFont,
//                       }}
//                     >
//                       ${Price}
//                     </Typography>
//                   </Box>
//                   <Divider />
//                   <Box
//                     sx={{
//                       display: "flex",
//                       justifyContent: "space-between",
//                       mt: "1rem",
//                     }}
//                   >
//                     <Typography
//                       variant="body1"
//                       sx={{
//                         color: Colors.fontColor,
//                         fontSize: "15px",
//                         fontFamily: Fonts.primaryFont,
//                       }}
//                     >
//                       Fee:
//                     </Typography>
//                     <Typography
//                       variant="body1"
//                       sx={{
//                         color: Colors.fontColor,
//                         fontSize: "15px",
//                         fontFamily: Fonts.primaryFont,
//                       }}
//                     >
//                       $0
//                     </Typography>
//                   </Box>
//                   <Box
//                     sx={{ display: "flex", justifyContent: "space-between" }}
//                   >
//                     <Typography
//                       variant="body1"
//                       sx={{
//                         color: Colors.fontColor,
//                         fontSize: "15px",
//                         fontFamily: Fonts.primaryFont,
//                       }}
//                     >
//                       Total:
//                     </Typography>
//                     <Typography
//                       variant="body1"
//                       sx={{
//                         color: Colors.fontColor,
//                         fontSize: "15px",
//                         fontFamily: Fonts.primaryFont,
//                       }}
//                     >
//                       ${Price}
//                     </Typography>
//                   </Box>
//                 </Box>
//               </Box>
//             )}

//             <Box
//               sx={{
//                 display: showBox ? "block" : "none",
//                 borderTop: 1px solid ${Colors.borderColor},
//               }}
//             >
//               <Typography
//                 variant="h6"
//                 sx={{
//                   fontFamily: Fonts.secondaryFont,
//                   color: "rgb(34, 92, 171)",
//                   fontSize: "16px",
//                   fontWeight: 600,
//                   m: "1rem 0",
//                 }}
//               >
//                 {secondPerson} Details
//               </Typography>
//               <Box display={"flex"} sx={{ gap: 3 }}>
//                 <TextField
//                   variant="outlined"
//                   label={${secondPerson} Email}
//                   fullWidth
//                   {...register("secondPersonEmail", {
//                     required: showBox
//                       ? ${secondPerson} Email is required
//                       : false, // Only required if showBox is true
//                     pattern: {
//                       value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i,
//                       message: "Invalid email format",
//                     },
//                   })}
//                   error={!!errors.secondPersonEmail}
//                   helperText={errors.secondPersonEmail?.message || " "}
//                 />
//                 <TextField
//                   variant="outlined"
//                   label={${secondPerson} Number}
//                   fullWidth
//                   {...register("secondPersonNumber", {
//                     pattern: {
//                       value: /^[0-9]{11}$/,
//                       message: "Invalid phone number format",
//                     },
//                   })}
//                   error={!!errors.secondPersonEmail}
//                   helperText={errors.secondPersonEmail?.message || " "}
//                 />
//               </Box>
//               <Button
//                 variant="contained"
//                 type="submit"
//                 sx={{ m: "0.5rem 0", float: "right", bgcolor: Colors.button }}
//               >
//                 Submit
//               </Button>
//             </Box>
//           </form>
//         </Box>
//       </Box>
//     </>
//   );
// }

// export default IntializeEscrow;

// my usestartEscrow hook
// import { useState } from "react";
// import { useForm} from "react-hook-form";
// import { useNavigate } from "react-router-dom";
// function useStartEscrow() {
//   const selecCurrencyOption = ["PK", "USD", "CAD"];
//   const selectRoleOption = ["Buyer", "Seller", "Both"];
//   const [showBox, setShowBox] = useState(false);
//   const [secondPerson, setSecondPerson] = useState("");
//   const navigate = useNavigate()
//   const {
//     control,
//     register,
//     handleSubmit,
//     formState: { errors },
//     watch
//   } = useForm({
//     defaultValues: {
//       MyRole: "Buyer", // Default value for MyRole
//       Currency: "USD", // Default value for Currency
//     },
//   });

//   const onSubmit = (data) => {
//     console.log("In Submit");
//     if (!showBox) {
//       setShowBox(true);
//       console.log("inbox");
//       if (data.MyRole == "Buyer") {
//         setSecondPerson("Seller");
//         console.log("Seller");
//       } else {
//         setSecondPerson("Buyer");
//         console.log("Buyer");
//       }
//     }
//     else if(showBox){
//         navigate("/LoggedIn/EscrowHistory")
//         console.log("Form Submitted: ", data);
//     }

//   };

//   return {
//     control,
//     register,
//     handleSubmit,
//     onSubmit,
//     errors,
//     selecCurrencyOption,
//     selectRoleOption,
//     showBox,
//     secondPerson,
//     watch
//   };
// }

// export default useStartEscrow;


// my contract component

// import { Box } from "@mui/material";
// import { Colors } from "../../../../Theme/Theme";
// import FAQAccordion from "../../Details/FAQAccordion/FAQAccordion";
// import InputGathering from "../../Components/InputGatheringComponent/InputGathering";
// import ContractInstruction from "../../Components/ContractInstruction/ContractInstruction";
// import LoggedInNavbarLayout from "../../LoggedInNavBar/LoggedInNavbarLayout/LoggedInNavbarLayout";

// function MakeContracts() {
//   return (
//     <>
//       <LoggedInNavbarLayout />
//       <Box
//         sx={{
//           display: "flex",
//           p: "2rem 0 2rem 7rem",
//           bgcolor: Colors.primaryBackColor,
//         }}
//       >
//         <InputGathering forContract={true} />
//         <Box sx={{ flexBasis: "30%", m: "0 1rem" }}>
//           <ContractInstruction isContract={true} />
//           <FAQAccordion isContract={true} />
//         </Box>
//       </Box>
//     </>
//   );
// }

// export default MakeContracts;
// my inout gathering component

// /* eslint-disable react/prop-types */
// import {
//   Box,
//   Typography,
//   TextField,
//   InputAdornment,
//   IconButton,
//   List,
//   ListItem,
//   Dialog,
//   DialogTitle,
//   DialogContent,
//   DialogActions,
//   Button,
// } from "@mui/material";
// import AttachmentIcon from "@mui/icons-material/Attachment";
// import DeleteIcon from "@mui/icons-material/Delete";
// import { Colors } from "../../../../Theme/Theme";
// import useInputGathering from "./hooks/useInputGathering";

// function InputGathering({ forContract }) {
//   const {
//     terms,
//     addTerm,
//     setInputValue,
//     inputValue,
//     containerRef,
//     deleteTerm,
//     handleEnterKeyPress,
//     navigate,
//     attachments,
//     isDialogOpen,
//     setDialogOpen,
//     handleFileSelect,
//     removeAttachment,
//     heading,
//     description,
//     navigateTO,
//     label,
//     isContract,
//   } = useInputGathering({ forContract });

//   return (
//     <>
//       <Box
//         sx={{
//           p: "2rem",
//           borderRadius: "8px",
//           height: "fit-content",
//           bgcolor: "white",
//           border: 1px solid ${Colors.borderColor},
//           flexBasis: "70%",
//         }}
//       >
//         <Typography variant="h5">{heading}</Typography>
//         <Typography
//           variant="body1"
//           sx={{ color: Colors.secondaryColor, margin: "0.8rem 0 2rem 0" }}
//         >
//           {description}
//         </Typography>

//         {/* Input component */}
//         <Box
//           sx={{
//             height: "350px",
//             overflow: "scroll",
//             scrollbarWidth: "none",
//             border: 1px solid ${Colors.borderColor},
//             borderRadius: "8px",
//             margin: "0 0 2rem 0",
//             p: "1rem 2rem",
//             display: "flex",
//             gap: 2,
//           }}
//           ref={containerRef}
//         >
//           {terms.length > 0 || attachments.length > 0 ? (
//             <>
//               {terms.length > 0 ? (
//                 <Box sx={{ flexBasis: isContract ? "100%" : "60%" }}>
//                   <Typography>Details</Typography>

//                   <List sx={{ listStyleType: "decimal", paddingLeft: "1rem" }}>
//                     {terms.map((term, index) => (
//                       <ListItem
//                         key={index}
//                         sx={{
//                           display: "list-item",
//                           p: "0 0 0 0.2rem !important",
//                         }}
//                       >
//                         <Box
//                           sx={{
//                             display: "flex",
//                             color: Colors.secondaryColor,
//                             justifyContent: "space-between",
//                             alignItems: "center",
//                             // fontWeight: "600",
//                             fontSize: "16px",
//                           }}
//                         >
//                           {term}
//                           <IconButton
//                             edge="end"
//                             aria-label="delete"
//                             onClick={() => deleteTerm(index)}
//                           >
//                             <DeleteIcon sx={{ color: Colors.dangerColor }} />
//                           </IconButton>
//                         </Box>
//                       </ListItem>
//                     ))}
//                   </List>
//                 </Box>
//               ) : (
//                 <Typography
//                   sx={{
//                     textAlign: "center",
//                     color: Colors.secondaryColor,
//                     padding: "1rem 0",
//                     flexBasis: "60%",
//                   }}
//                 >
//                   There are currently no details Added.
//                 </Typography>
//               )}

//               {!isContract &&
//                 (attachments.length > 0 ? (
//                   <Box sx={{ flexBasis: "40%" }}>
//                     <Typography>Attachments</Typography>
//                     {/* Attachments */}
//                     {!isContract && attachments.length > 0 && (
//                       <List
//                         sx={{ listStyleType: "decimal", paddingLeft: "1rem" }}
//                       >
//                         {attachments.map((file, index) => (
//                           <ListItem
//                             key={index}
//                             sx={{
//                               display: "list-item",
//                               p: "0 0 0 0.2rem !important",
//                             }}
//                           >
//                             <ListItem
//                               sx={{
//                                 display: "flex",
//                                 justifyContent: "space-between",
//                                 alignItems: "center",
//                                 p: "0 0 0 0.2rem !important",
//                               }}
//                             >
//                               <Typography
//                                 sx={{
//                                   fontSize: "14px",
//                                   color: Colors.secondaryColor,
//                                 }}
//                               >
//                                 {file.name}
//                               </Typography>
//                               <IconButton
//                                 edge="end"
//                                 aria-label="delete"
//                                 onClick={() => removeAttachment(index)}
//                               >
//                                 <DeleteIcon
//                                   sx={{ color: Colors.dangerColor }}
//                                 />
//                               </IconButton>
//                             </ListItem>
//                           </ListItem>
//                         ))}
//                       </List>
//                     )}
//                   </Box>
//                 ) : (
//                   <Typography
//                     sx={{
//                       textAlign: "center",
//                       color: Colors.secondaryColor,
//                       padding: "1rem 0",
//                       flexBasis: "40%",
//                     }}
//                   >
//                     There are currently no Attachments Added.
//                   </Typography>
//                 ))}
//             </>
//           ) : (
//             <Typography
//               sx={{
//                 textAlign: "center",
//                 color: Colors.secondaryColor,
//                 padding: "1rem 0",
//                 flexBasis: "100%",
//               }}
//             >
//               There are currently no {isContract ? "Conditions" : "Details"}{" "}
//               Added.
//             </Typography>
//           )}
//         </Box>

//         {/* TextField component */}
//         <Box>
//           <TextField
//             variant="outlined"
//             label={label}
//             fullWidth
//             value={inputValue}
//             onChange={(e) => setInputValue(e.target.value)}
//             onKeyDown={handleEnterKeyPress}
//             InputProps={{
//               startAdornment: !isContract && (
//                 <InputAdornment position="start">
//                   <IconButton onClick={() => setDialogOpen(true)}>
//                     <AttachmentIcon sx={{ color: Colors.primaryColor }} />
//                   </IconButton>
//                 </InputAdornment>
//               ),
//               endAdornment: (
//                 <InputAdornment position="end">
//                   <Typography
//                     component="span"
//                     sx={{
//                       color: "white",
//                       cursor: "pointer",
//                       bgcolor: "gray",
//                       px: "1rem",
//                       py: "0.3rem",
//                       "&:hover": { bgcolor: "black" },
//                       borderRadius: "4px",
//                       fontSize: "0.875rem",
//                       m: "0 0.5rem 0 0",
//                     }}
//                     onClick={addTerm}
//                   >
//                     Add {isContract ? "Term" : "Detail"}
//                   </Typography>

//                   <Typography
//                     component="span"
//                     sx={{
//                       color: "white",
//                       cursor: "pointer",
//                       bgcolor: "#007bff",
//                       px: "1rem",
//                       py: "0.3rem",
//                       "&:hover": { bgcolor: "#0056b3" },
//                       borderRadius: "4px",
//                       fontSize: "0.875rem",
//                     }}
//                     onClick={() => navigate(navigateTO)}
//                   >
//                     Save
//                   </Typography>
//                 </InputAdornment>
//               ),
//             }}
//           />
//         </Box>
//       </Box>

//       {/* Dialog for file selection */}
//       <Dialog open={isDialogOpen} onClose={() => setDialogOpen(false)}>
//         <DialogTitle>Select Attachments</DialogTitle>
//         <DialogContent>
//           <input
//             type="file"
//             multiple
//             accept="image/*,video/*"
//             onChange={handleFileSelect}
//           />
//         </DialogContent>
//         <DialogActions>
//           <Button onClick={() => setDialogOpen(false)} color="primary">
//             Cancel
//           </Button>
//         </DialogActions>
//       </Dialog>
//     </>
//   );
// }

// export default InputGathering;



// my use input gathering hook

// import { useNavigate } from "react-router-dom";
// import React, { useState, useEffect } from "react";

// function useInputGathering({ forContract }) {
//   const isContract = forContract;
//   const [terms, setTerms] = useState([]);
//   const [index, setIndex] = useState(0);
//   const containerRef = React.useRef(null);
//   const [inputValue, setInputValue] = useState("");
//   const navigate = useNavigate();

//   const [attachments, setAttachments] = useState([]);
//   const [isDialogOpen, setDialogOpen] = useState(false);

//   const handleFileSelect = (event) => {
//     const files = Array.from(event.target.files);
//     setAttachments((prev) => [...prev, ...files]);
//     setDialogOpen(false);
//   };

//   const removeAttachment = (index) => {
//     setAttachments((prev) => prev.filter((_, i) => i !== index));
//   };

//   const heading = isContract ? "Terms and Conditions" : "Dispute Information";
//   const description = isContract
//     ? "Add the terms and conditions that will be upheld by both parties to ensure no issues occur when the transaction is done."
//     : "Provide the necessary information about the dispute, including details that will help in resolution.";
//   const navigateTO = isContract
//     ? "/LoggedIn/EscrowHistory"
//     : "/LoggedIn/EscrowDisputes";
//   const label = isContract ? "Terms" : "Dispute Details";

//   const deleteTerm = (index) => {
//     const updatedTerms = terms.filter((_, i) => i !== index);
//     setTerms(updatedTerms);
//   };

//   useEffect(() => {
//     setIndex((prevIndex) => {
//       setIndex(prevIndex + 1);
//     });
//   }, [terms]);
//   const addTerm = () => {
//     if (inputValue.trim() === "") {
//       alert("Please enter a term before adding!");
//       return;
//     }
//     setTerms((prevTerms) => [...prevTerms, inputValue.trim()]);
//     setInputValue("");
//   };
//   const handleEnterKeyPress = (event) => {
//     if (event.key === "Enter") {
//       addTerm();
//     }
//   };
//   return {
//     terms,
//     setTerms,
//     index,
//     addTerm,
//     setInputValue,
//     inputValue,
//     containerRef,
//     deleteTerm,
//     handleEnterKeyPress,
//     navigate,
//     attachments,
//     isDialogOpen,
//     setDialogOpen,
//     setAttachments,
//     handleFileSelect,
//     removeAttachment,
//     heading,
//     description,
//     navigateTO,
//     label,
//     isContract,
//   };
// }

// export default useInputGathering;










// this is my form component where i am getting the details escept dispute
// add these changes to it also if the subtitle is the category
// my intialize escrow form with the fields. 
// /* eslint-disable react/prop-types */
// import {
//   Box,
//   FormControl,
//   InputLabel,
//   Select,
//   Grid2 as Grid,
//   Typography,
//   TextField,
//   Button,
//   Divider,
//   MenuItem,
// } from "@mui/material";
// import { Controller } from "react-hook-form";
// import { Colors, Fonts } from "../../../../Theme/Theme";
// import useStartEscrow from "./Hooks/useStartEscrow";
// import LoggedInNavbarLayout from "../../LoggedInNavBar/LoggedInNavbarLayout/LoggedInNavbarLayout.jsx";

// export const SelectComponent = ({ name, control, label, options = [] }) => {
//   return (
//     <>
//       <Controller
//         name={name}
//         control={control}
//         render={({ field, fieldState }) => (
//           <FormControl
//             fullWidth
//             error={!!fieldState.error}
//             sx={{ mt: "0.3rem" }}
//           >
//             <InputLabel>{label}</InputLabel>
//             <Select {...field} label={label}>
//               {options.map((option, index) => (
//                 <MenuItem key={index} value={option}>
//                   {option}
//                 </MenuItem>
//               ))}
//             </Select>
//           </FormControl>
//         )}
//         rules={{ required: ${label} is required }}
//       />
//     </>
//   );
// };

// function IntializeEscrow() {
//   const {

//     errors,
//     control,
//     showBox,
//     register,
//     onSubmit,
//     secondPerson,
//     handleSubmit,
//     selectRoleOption,
//     selecCurrencyOption,
//   } = useStartEscrow();
  


//   return (
//     <>
//       <Box sx={{ bgcolor: Colors.tertiary, p: "0 0 3rem 0" }}>
//         <LoggedInNavbarLayout />
//         {/*  the Form component starts here  */}
//         <Box
//           sx={{
//             margin: {
//               xs: "3rem 3rem 0",
//               // sm: "2rem 7rem 2rem",
//               md: "3rem 15rem 0",
//             },
//             boxShadow: "0 4px 8px hsla(185, 8%, 67%, .5)",
//             borderRadius: "8px",
//             backgroundColor: "#fff",
//             // p: "5rem 5rem",
//             p: { xs: "1rem 1rem", sm: "3rem 5rem", md: "4rem 10rem" },
//             // "@media (min-width:660px)": {
//             //   margin: " 3rem 3rem 4rem",
//             // },
//             "@media (min-width:760px)": {
//               margin: " 3rem 3rem 0",
//               p: "2rem 1rem",
//             },
//             "@media (min-width:900px)": {
//               margin: " 3rem 5rem 0",
//               p: "2rem 1rem",
//             },
//             "@media (min-width:950px)": {
//               margin: " 3rem 8.5rem 0",
//               p: "3rem 2rem",
//             },
//             "@media (min-width:1000px)": {
//               margin: " 3rem 10rem 0",
//               p: "3rem 3rem",
//             },
//             "@media (min-width:1100px)": {
//               margin: " 3rem 15rem 0",
//               p: "3rem 5rem",
//             },
//           }}
//         >
//           <Typography
//             variant="h5"
//             sx={{
//               color: Colors.fontColor,
//               fontFamily: Fonts.primaryFont,
//               mb: "0.5rem",
//             }}
//           >
//             Start Transaction
//           </Typography>
//           <Divider />
//           <form onSubmit={handleSubmit(onSubmit)}>
//             <TextField
//               variant="outlined"
//               label="Transaction Title"
//               fullWidth
//               autoFocus
//               {...register("TransactionTitle", {
//                 required: "Required",
//               })}
//               error={!!errors.TransactionTitle}
//               helperText={errors.TransactionTitle?.message || " "}
//               sx={{ mt: "1rem" }}
//             />

//             <Grid container spacing={4} sx={{}}>
//               <Grid
//                 item
//                 size={{ xs: 12, sm: 4, md: 4 }}
//                 xs={4}
//                 sx={{
//                   "@media (min-width:660px)": {
//                     size: 12,
//                   },
//                 }}
//               >
//                 <SelectComponent
//                   name="MyRole"
//                   control={control}
//                   label="My Role"
//                   options={selectRoleOption}
//                 />
//               </Grid>
//               <Grid
//                 item
//                 size={{ xs: 12, sm: 4, md: 4 }}
//                 xs={4}
//                 sx={{
//                   "@media (min-width:660px)": {
//                     size: 12,
//                   },
//                 }}
//               >
//                 <SelectComponent
//                   name="Currency"
//                   control={control}
//                   label="Currency"
//                   options={selecCurrencyOption}
//                 />
//               </Grid>
//               <Grid item size={{ xs: 12, sm: 4, md: 4 }} xs={4}>
//                 <TextField
//                   variant="outlined"
//                   label="Inspection Period (Days)"
//                   placeholder={"1"}
//                   {...register("InspectionPeriod", {
//                     required: "Required",
//                     min: {
//                       value: 1,
//                       message: "Inspection Period must be greater than 0",
//                     },
//                     pattern: {
//                       value: /^[0-9]+$/,
//                       message: "Inspection Period must be a valid integer",
//                     },
//                   })}
//                   error={!!errors.InspectionPeriod}
//                   helperText={errors.InspectionPeriod?.message || " "}
//                   sx={{ mt: "0.3rem" }}
//                   fullWidth
//                 />
//               </Grid>
//             </Grid>
//             <Typography
//               sx={{
//                 p: "0.5rem 0 0.5rem",
//                 fontWeight: "600",
//                 fontSize: "15px",
//                 m: "0.5rem 0 0.5rem 0 ",
//                 color: Colors.button,
//               }}
//             >
//               Transaction Details
//             </Typography>
//             {!showBox && (
//               <Box>
//                 <Grid container spacing={{ xs: 1, sm: 2, md: 3 }}>
//                   <Grid item size={{ xs: 12, sm: 6 }} xs={6}>
//                     <TextField
//                       variant="outlined"
//                       label="Item Name"
//                       fullWidth
//                       {...register("ItemName", { required: "Required" })}
//                       error={!!errors.ItemName}
//                       helperText={errors.ItemName?.message || " "}
//                       sx={{ mt: "0.3rem" }}
//                     />
//                   </Grid>
//                   <Grid item size={{ xs: 12, sm: 6 }} xs={6}>
//                     <TextField
//                       variant="outlined"
//                       label="Price in $"
//                       fullWidth
//                       defaultValue="0"
//                       {...register("Price", {
//                         required: "Required",
//                         // valueAsNumber: true, // ensures it's treated as a number
//                         min: {
//                           value: 0,
//                           message: "Price must be greater than 0",
//                         },
//                         pattern: {
//                           value: /^[0-9]+$/, // Regular expression for integer validation
//                           message: "Inspection Period must be an integer", // Error message
//                         },
//                       })}
//                       error={!!errors.Price}
//                       helperText={errors.Price?.message || " "}
//                       sx={{ mt: "0.3rem" }}
//                     />
//                   </Grid>
//                 </Grid>

//                 <TextField
//                   variant="outlined"
//                   label="Item Category"
//                   fullWidth
//                   {...register("ItemCategory", {
//                     required: "Required",
//                   })}
//                   error={!!errors.ItemCategory}
//                   helperText={errors.ItemCategory?.message || " "}
//                   sx={{ mt: "0.3rem" }}
//                 />

//                 <TextField
//                   variant="outlined"
//                   label="Item Description"
//                   fullWidth
//                   {...register("ItemDescription", {
//                     required: "Required",
//                   })}
//                   error={!!errors.ItemDescription}
//                   helperText={errors.ItemDescription?.message || " "}
//                 />
//                 <Button
//                   variant="contained"
//                   type="submit"
//                   sx={{ mt: "0.3rem", float: "right", bgcolor: Colors.button }}
//                 >
//                   Add Item
//                 </Button>
//               </Box>
//             )}
//             {showBox && (
//               <Box>
//                 <Box
//                   sx={{
//                     p: "2rem 2rem",
//                     border: 1px solid ${Colors.borderColor},
//                     boxShadow: "0 1px 1px hsla(185, 8%, 67%, .5)",
//                     borderRadius: "8px",
//                     m: "1rem 0 2rem 0",
//                   }}
//                 >
//                   <Box
//                     sx={{ display: "flex", justifyContent: "space-between" }}
//                   >
//                     <Typography
//                       variant="h6"
//                       sx={{
//                         fontWeight: "600",
//                         fontFamily: Fonts.primaryFont,
//                         fontSize: "14px",
//                       }}
//                     >
//                       {TransactionTitle}
//                     </Typography>
//                     <Typography
//                       variant="body1"
//                       sx={{ color: Colors.fontColor }}
//                     >
//                       ${Price}
//                     </Typography>
//                   </Box>
//                   <Typography
//                     variant="body1"
//                     sx={{
//                       color: Colors.fontColor,
//                       fontFamily: Fonts.primaryFont,
//                       fontStyle: "italic",
//                     }}
//                   >
//                     {ItemCategory}
//                   </Typography>
//                   <Typography
//                     variant="body1"
//                     sx={{
//                       color: Colors.fontColor,
//                       fontFamily: Fonts.primaryFont,
//                     }}
//                   >
//                     {ItemDescription}
//                   </Typography>
//                   <Typography variant="body1" sx={{ m: "1rem 0 0 0 " }}>
//                     Inspection Period is {InspectionPeriod}
//                   </Typography>
//                 </Box>

//                 <Box
//                   sx={{
//                     p: "4rem 0.5rem",
//                     borderTop: 0.5px solid ${Colors.borderColor},
//                   }}
//                 >
//                   <Typography
//                     variant="h6"
//                     sx={{
//                       fontSize: "17px",
//                       fontFamily: Fonts.primaryFont,
//                       fontWeight: 600,
//                       mb: "1rem",
//                       color: Colors.button,
//                     }}
//                   >
//                     Transaction Summary
//                   </Typography>
//                   <Box
//                     sx={{
//                       display: "flex",
//                       justifyContent: "space-between",
//                       p: "0.5rem 0 1.5rem 0",
//                       borderBottom: 1px solid ${Colors.borderColor},
//                     }}
//                   >
//                     <Typography
//                       variant="body1"
//                       sx={{
//                         color: Colors.fontColor,
//                         fontSize: "15px",
//                         fontFamily: Fonts.primaryFont,
//                       }}
//                     >
//                       Subtotal:
//                     </Typography>
//                     <Typography
//                       variant="body1"
//                       sx={{
//                         color: Colors.fontColor,
//                         fontSize: "15px",
//                         fontFamily: Fonts.primaryFont,
//                       }}
//                     >
//                       ${Price}
//                     </Typography>
//                   </Box>
//                   <Divider />
//                   <Box
//                     sx={{
//                       display: "flex",
//                       justifyContent: "space-between",
//                       mt: "1rem",
//                     }}
//                   >
//                     <Typography
//                       variant="body1"
//                       sx={{
//                         color: Colors.fontColor,
//                         fontSize: "15px",
//                         fontFamily: Fonts.primaryFont,
//                       }}
//                     >
//                       Fee:
//                     </Typography>
//                     <Typography
//                       variant="body1"
//                       sx={{
//                         color: Colors.fontColor,
//                         fontSize: "15px",
//                         fontFamily: Fonts.primaryFont,
//                       }}
//                     >
//                       $0
//                     </Typography>
//                   </Box>
//                   <Box
//                     sx={{ display: "flex", justifyContent: "space-between" }}
//                   >
//                     <Typography
//                       variant="body1"
//                       sx={{
//                         color: Colors.fontColor,
//                         fontSize: "15px",
//                         fontFamily: Fonts.primaryFont,
//                       }}
//                     >
//                       Total:
//                     </Typography>
//                     <Typography
//                       variant="body1"
//                       sx={{
//                         color: Colors.fontColor,
//                         fontSize: "15px",
//                         fontFamily: Fonts.primaryFont,
//                       }}
//                     >
//                       ${Price}
//                     </Typography>
//                   </Box>
//                 </Box>
//               </Box>
//             )}

//             <Box
//               sx={{
//                 display: showBox ? "block" : "none",
//                 borderTop: 1px solid ${Colors.borderColor},
//               }}
//             >
//               <Typography
//                 variant="h6"
//                 sx={{
//                   fontFamily: Fonts.secondaryFont,
//                   color: "rgb(34, 92, 171)",
//                   fontSize: "16px",
//                   fontWeight: 600,
//                   m: "1rem 0",
//                 }}
//               >
//                 {secondPerson} Details
//               </Typography>
//               <Box display={"flex"} sx={{ gap: 3 }}>
//                 <TextField
//                   variant="outlined"
//                   label={${secondPerson} Email}
//                   fullWidth
//                   {...register("secondPersonEmail", {
//                     required: showBox
//                       ? ${secondPerson} Email is required
//                       : false, // Only required if showBox is true
//                     pattern: {
//                       value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i,
//                       message: "Invalid email format",
//                     },
//                   })}
//                   error={!!errors.secondPersonEmail}
//                   helperText={errors.secondPersonEmail?.message || " "}
//                 />
//                 <TextField
//                   variant="outlined"
//                   label={${secondPerson} Number}
//                   fullWidth
//                   {...register("secondPersonNumber", {
//                     pattern: {
//                       value: /^[0-9]{11}$/,
//                       message: "Invalid phone number format",
//                     },
//                   })}
//                   error={!!errors.secondPersonEmail}
//                   helperText={errors.secondPersonEmail?.message || " "}
//                 />
//               </Box>
//               <Button
//                 variant="contained"
//                 type="submit"
//                 sx={{ m: "0.5rem 0", float: "right", bgcolor: Colors.button }}
//               >
//                 Submit
//               </Button>
//             </Box>
//           </form>
//         </Box>
//       </Box>
//     </>
//   );
// }

// export default IntializeEscrow;


// my contract component

// import { Box } from "@mui/material";
// import { Colors } from "../../../../Theme/Theme";
// import FAQAccordion from "../../Details/FAQAccordion/FAQAccordion";
// import InputGathering from "../../Components/InputGatheringComponent/InputGathering";
// import ContractInstruction from "../../Components/ContractInstruction/ContractInstruction";
// import LoggedInNavbarLayout from "../../LoggedInNavBar/LoggedInNavbarLayout/LoggedInNavbarLayout";

// function MakeContracts() {
//   return (
//     <>
//       <LoggedInNavbarLayout />
//       <Box
//         sx={{
//           display: "flex",
//           p: "2rem 0 2rem 7rem",
//           bgcolor: Colors.primaryBackColor,
//         }}
//       >
//         <InputGathering forContract={true} />
//         <Box sx={{ flexBasis: "30%", m: "0 1rem" }}>
//           <ContractInstruction isContract={true} />
//           <FAQAccordion isContract={true} />
//         </Box>
//       </Box>
//     </>
//   );
// }

// export default MakeContracts;

// my inout gathering component

// /* eslint-disable react/prop-types */
// import {
//   Box,
//   Typography,
//   TextField,
//   InputAdornment,
//   IconButton,
//   List,
//   ListItem,
//   Dialog,
//   DialogTitle,
//   DialogContent,
//   DialogActions,
//   Button,
// } from "@mui/material";
// import AttachmentIcon from "@mui/icons-material/Attachment";
// import DeleteIcon from "@mui/icons-material/Delete";
// import { Colors } from "../../../../Theme/Theme";
// import useInputGathering from "./hooks/useInputGathering";

// function InputGathering({ forContract }) {
//   const {
//     terms,
//     addTerm,
//     setInputValue,
//     inputValue,
//     containerRef,
//     deleteTerm,
//     handleEnterKeyPress,
//     navigate,
//     attachments,
//     isDialogOpen,
//     setDialogOpen,
//     handleFileSelect,
//     removeAttachment,
//     heading,
//     description,
//     navigateTO,
//     label,
//     isContract,
//   } = useInputGathering({ forContract });

//   return (
//     <>
//       <Box
//         sx={{
//           p: "2rem",
//           borderRadius: "8px",
//           height: "fit-content",
//           bgcolor: "white",
//           border: 1px solid ${Colors.borderColor},
//           flexBasis: "70%",
//         }}
//       >
//         <Typography variant="h5">{heading}</Typography>
//         <Typography
//           variant="body1"
//           sx={{ color: Colors.secondaryColor, margin: "0.8rem 0 2rem 0" }}
//         >
//           {description}
//         </Typography>

//         {/* Input component */}
//         <Box
//           sx={{
//             height: "350px",
//             overflow: "scroll",
//             scrollbarWidth: "none",
//             border: 1px solid ${Colors.borderColor},
//             borderRadius: "8px",
//             margin: "0 0 2rem 0",
//             p: "1rem 2rem",
//             display: "flex",
//             gap: 2,
//           }}
//           ref={containerRef}
//         >
//           {terms.length > 0 || attachments.length > 0 ? (
//             <>
//               {terms.length > 0 ? (
//                 <Box sx={{ flexBasis: isContract ? "100%" : "60%" }}>
//                   <Typography>Details</Typography>

//                   <List sx={{ listStyleType: "decimal", paddingLeft: "1rem" }}>
//                     {terms.map((term, index) => (
//                       <ListItem
//                         key={index}
//                         sx={{
//                           display: "list-item",
//                           p: "0 0 0 0.2rem !important",
//                         }}
//                       >
//                         <Box
//                           sx={{
//                             display: "flex",
//                             color: Colors.secondaryColor,
//                             justifyContent: "space-between",
//                             alignItems: "center",
//                             // fontWeight: "600",
//                             fontSize: "16px",
//                           }}
//                         >
//                           {term}
//                           <IconButton
//                             edge="end"
//                             aria-label="delete"
//                             onClick={() => deleteTerm(index)}
//                           >
//                             <DeleteIcon sx={{ color: Colors.dangerColor }} />
//                           </IconButton>
//                         </Box>
//                       </ListItem>
//                     ))}
//                   </List>
//                 </Box>
//               ) : (
//                 <Typography
//                   sx={{
//                     textAlign: "center",
//                     color: Colors.secondaryColor,
//                     padding: "1rem 0",
//                     flexBasis: "60%",
//                   }}
//                 >
//                   There are currently no details Added.
//                 </Typography>
//               )}

//               {!isContract &&
//                 (attachments.length > 0 ? (
//                   <Box sx={{ flexBasis: "40%" }}>
//                     <Typography>Attachments</Typography>
//                     {/* Attachments */}
//                     {!isContract && attachments.length > 0 && (
//                       <List
//                         sx={{ listStyleType: "decimal", paddingLeft: "1rem" }}
//                       >
//                         {attachments.map((file, index) => (
//                           <ListItem
//                             key={index}
//                             sx={{
//                               display: "list-item",
//                               p: "0 0 0 0.2rem !important",
//                             }}
//                           >
//                             <ListItem
//                               sx={{
//                                 display: "flex",
//                                 justifyContent: "space-between",
//                                 alignItems: "center",
//                                 p: "0 0 0 0.2rem !important",
//                               }}
//                             >
//                               <Typography
//                                 sx={{
//                                   fontSize: "14px",
//                                   color: Colors.secondaryColor,
//                                 }}
//                               >
//                                 {file.name}
//                               </Typography>
//                               <IconButton
//                                 edge="end"
//                                 aria-label="delete"
//                                 onClick={() => removeAttachment(index)}
//                               >
//                                 <DeleteIcon
//                                   sx={{ color: Colors.dangerColor }}
//                                 />
//                               </IconButton>
//                             </ListItem>
//                           </ListItem>
//                         ))}
//                       </List>
//                     )}
//                   </Box>
//                 ) : (
//                   <Typography
//                     sx={{
//                       textAlign: "center",
//                       color: Colors.secondaryColor,
//                       padding: "1rem 0",
//                       flexBasis: "40%",
//                     }}
//                   >
//                     There are currently no Attachments Added.
//                   </Typography>
//                 ))}
//             </>
//           ) : (
//             <Typography
//               sx={{
//                 textAlign: "center",
//                 color: Colors.secondaryColor,
//                 padding: "1rem 0",
//                 flexBasis: "100%",
//               }}
//             >
//               There are currently no {isContract ? "Conditions" : "Details"}{" "}
//               Added.
//             </Typography>
//           )}
//         </Box>

//         {/* TextField component */}
//         <Box>
//           <TextField
//             variant="outlined"
//             label={label}
//             fullWidth
//             value={inputValue}
//             onChange={(e) => setInputValue(e.target.value)}
//             onKeyDown={handleEnterKeyPress}
//             InputProps={{
//               startAdornment: !isContract && (
//                 <InputAdornment position="start">
//                   <IconButton onClick={() => setDialogOpen(true)}>
//                     <AttachmentIcon sx={{ color: Colors.primaryColor }} />
//                   </IconButton>
//                 </InputAdornment>
//               ),
//               endAdornment: (
//                 <InputAdornment position="end">
//                   <Typography
//                     component="span"
//                     sx={{
//                       color: "white",
//                       cursor: "pointer",
//                       bgcolor: "gray",
//                       px: "1rem",
//                       py: "0.3rem",
//                       "&:hover": { bgcolor: "black" },
//                       borderRadius: "4px",
//                       fontSize: "0.875rem",
//                       m: "0 0.5rem 0 0",
//                     }}
//                     onClick={addTerm}
//                   >
//                     Add {isContract ? "Term" : "Detail"}
//                   </Typography>

//                   <Typography
//                     component="span"
//                     sx={{
//                       color: "white",
//                       cursor: "pointer",
//                       bgcolor: "#007bff",
//                       px: "1rem",
//                       py: "0.3rem",
//                       "&:hover": { bgcolor: "#0056b3" },
//                       borderRadius: "4px",
//                       fontSize: "0.875rem",
//                     }}
//                     onClick={() => navigate(navigateTO)}
//                   >
//                     Save
//                   </Typography>
//                 </InputAdornment>
//               ),
//             }}
//           />
//         </Box>
//       </Box>

//       {/* Dialog for file selection */}
//       <Dialog open={isDialogOpen} onClose={() => setDialogOpen(false)}>
//         <DialogTitle>Select Attachments</DialogTitle>
//         <DialogContent>
//           <input
//             type="file"
//             multiple
//             accept="image/*,video/*"
//             onChange={handleFileSelect}
//           />
//         </DialogContent>
//         <DialogActions>
//           <Button onClick={() => setDialogOpen(false)} color="primary">
//             Cancel
//           </Button>
//         </DialogActions>
//       </Dialog>
//     </>
//   );
// }
 